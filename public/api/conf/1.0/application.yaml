openapi: 3.0.0
info:
  title: Compliance Documents
  description: |
    # Overview
    VAT Repayments Info API will support the information transfer of VAT repayment data between SAS and Electronic Folders for use by Case Workers and Contact Centre staff.
    # Project Summary
    The Protect Connect Project aims to reduce the load and dependency on the current Connect Platform which is inflexible in meeting changing business requirements due to its bespoke design. Also, because of growth of data volumes and restrictions on expanding the current platform, system performance has degraded over time and is directly impacting HMRC's ability to identify non-compliance and respond effectively to business demands due to latency and capacity issues. Therefore the Protect Connect Project will migrate the TRUCE service and parts of Connect to a new service provider.
  
    The chosen provider is SAS Software Inc and the service will be provided as a PaaS hosted on AWS. The SAS solution includes SAS Visual Investigator which will be used by operators to manage risk alerts raised as the result of risk rules. Risk alerts which are deemed to require further, more complex investigation &/or contact with the customer will be transferred to Caseflow.
    
    # Protect Connect documents
    In the Protect Connect project, the property values required are:
      - In the URI, the dynamic path parameter `{document-id}` must be a numeric string starting at 810000000
      - Only the object `ef` within the `classIndex` must be supplied; do not use the alternative objects `nReg` and `pReg`
      - The property `docType` must be set to `UCRE`
      - The property `docBinaryRef` must be the same as the `{document-id}` URI path parameter
      - Only `docBinaryType` values `pdf` and `html` are to be used
      - The property `creatingUser` must be set to `PROTCONN`
      - The property `locationCode` must be set to `250`
      - The property `allocateToUser` must be left blank
      - Within the object `ef`
      - the property `category` must be left blank
      - the property `enquiryReference` must be left blank
      - the property `caseReference` must be left blank
    
    # Versioning
    When an API changes in a way that is backwards-incompatible, we increase the version number of the API. 
    See our [reference guide](/api-documentation/docs/reference-guide#versioning) for more on versioning.
    
    # Errors
    We use standard HTTP status codes to show whether an API request succeeded or not. They are usually in the range:
    - 200 to 299 if it succeeded, including code 202 if it was accepted by an API that needs to wait for further action
    - 400 to 499 if it failed because of a client error by your application
    - 500 to 599 if it failed because of an error on our server
    
    Errors specific to each API are shown in the Endpoints section, under Response. See our 
    [reference guide](/api-documentation/docs/reference-guide#errors) for more on errors.
    
    # Testing
    You can use the sandbox environment to [test this API](https://developer.service.hmrc.gov.uk/api-documentation/docs/testing).

  contact: {}
  version: '1.0'
servers:
  - url: https://api.service.hmrc.gov.uk/
    variables: {}
paths:
  /misc/compliance-documents/vat-repayment-info/{document-id}:
    post:
      tags:
        - misc
      summary: post-document-api
      description: Passing VAT repayment data to integration framework
      operationId: post-document-api
      parameters:
        - name: document-id
          in: path
          description: A string representation of an integer in the range 0 to 18439999999999999999.
          required: true
          style: simple
          schema:
            pattern: ^(([0-9]{1,19})|(1[0-7][0-9]{18})|(18[0-3][0-9]{17})|(184[0-3][0-9]{16}))$
            type: string
            example: '18439999999999999999'
        - name: CorrelationId
          in: header
          description: A UUID identifier of the transaction.
          required: true
          style: simple
          schema:
            type: string
            example: a1e8057e-fbbc-47a8-a8b4-78d9f015c253
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/IFAPI1562StoreDocumentrequestschemav1.6.0'
              - example:
                  documentBinary: 9743yfshibfkjnjkjklfdjbgsuog==
                  documentMetadata:
                    classIndex:
                      ef:
                        dTRN: '9443402451823'
                        locationCode: '731'
                        category: a-Category1
                        enquiryReference: UYp3V0
                        caseReference: ABC01234
                    docType: VoHl
                    docDate: 2000-02-29
                    docBinaryHash: c186S8wUObpPHoQ6Y/0s+g==
                    docBinaryRef: qVX29XN0iireH
                    docBinaryType: doc
                    creatingUser: YIfD
                    docDescription: fS6k2abFoTNuirZSLQw7
                    docPages: 1
                    allocateToUser: '*AUTO*'
            examples:
              example-1:
                description: example EF document body
                value:
                  documentBinary: 9743yfshibfkjnjkjklfdjbgsuog==
                  documentMetadata:
                    classIndex:
                      ef:
                        dTRN: '9443402451823'
                        locationCode: '731'
                        category: a-Category1
                        enquiryReference: UYp3V0
                        caseReference: ABC01234
                    docType: VoHl
                    docDate: 2000-02-29
                    docBinaryHash: c186S8wUObpPHoQ6Y/0s+g==
                    docBinaryRef: qVX29XN0iireH
                    docBinaryType: doc
                    creatingUser: YIfD
                    docDescription: fS6k2abFoTNuirZSLQw7
                    docPages: 1
                    allocateToUser: '*AUTO*'
              example-2:
                description: example NReg document body
                value:
                  documentBinary: 9743yfshibfkjnjkjklfdjbgsuog==
                  documentMetadata:
                    classIndex:
                      nReg:
                        name: John Doe
                        postCode: SW1A0AA
                        callerReference: Ref -001
                        enquiryReference: UYp3V0
                        caseReference: ABC01234
                    docType: VoHl
                    docDate: 2000-02-29
                    docBinaryHash: c186S8wUObpPHoQ6Y/0s+g==
                    docBinaryRef: qVX29XN0iireH
                    docBinaryType: doc
                    creatingUser: YIfD
                    docDescription: fS6k2abFoTNuirZSLQw7
                    docPages: 1
                    allocateToUser: '*AUTO*'
              example-3:
                description: example PReg document body
                value:
                  documentBinary: 9743yfshibfkjnjkjklfdjbgsuog==
                  documentMetadata:
                    classIndex:
                      pReg:
                        caseReference: '1234'
                        name: John Doe
                        postCode: SW1A0AA
                        outcomeStatus: Un -successful1
                        riskScore: '345'
                        locationCode: '059'
                    docType: VoHl
                    docDate: 2000-02-29
                    docBinaryHash: c186S8wUObpPHoQ6Y/0s+g==
                    docBinaryRef: qVX29XN0iireH
                    docBinaryType: doc
                    creatingUser: YIfD1
                    docDescription: fS6k2abFoTNuirZSLQw7
                    docPages: 1
                    allocateToUser: '*AUTO*'
        required: true
      responses:
        '202':
          description: ''
          headers: {}
          content: {}
        '400':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/errorResponse'
                - example:
                    code: INVALID_PAYLOAD
              examples:
                example-1:
                  description: The document payload provided was invalid.
                  value:
                    code: INVALID_PAYLOAD
                example-2:
                  description: An expected field has an invalid value.
                  value:
                    code: INVALID_FIELD
                example-3:
                  description: An expected field is missing.
                  value:
                    code: MISSING_FIELD
                example-4:
                  description: An unexpected field was found.
                  value:
                    code: UNEXPECTED_FIELD
                example-5:
                  description: The correlation ID provided is invalid.
                  value:
                    code: INVALID_CORRELATION_ID
                example-6:
                  description: The correlation ID wasn't provided.
                  value:
                    code: MISSING_CORRELATION_ID
                example-7:
                  description: The document ID provided is invalid.
                  value:
                    code: INVALID_DOCUMENT_ID
                example-8:
                  description: The document payload provided is invalid.
                  value:
                    code: INVALID_PAYLOAD
                example-9:
                  description: The payload provided is not a proper Json object.
                  value:
                    code: INVALID_JSON_TYPE
        '401':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/errorResponse'
                - example:
                    code: UNAUTHORIZED
              example:
                code: UNAUTHORIZED
        '500':
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/errorResponse'
                - example:
                    code: INTERNAL_SERVER_ERROR
              example:
                code: INTERNAL_SERVER_ERROR
      deprecated: false
components:
  schemas:
    errorResponse:
      title: errorResponse
      required:
      - code
      type: object
      properties:
        code:
          type: string
    ClassIndex:
      title: ClassIndex
      required:
      - ef
      type: object
      properties:
        ef:
          $ref: '#/components/schemas/classIndexEF'
    ClassIndex1:
      title: ClassIndex1
      required:
      - nReg
      type: object
      properties:
        nReg:
          $ref: '#/components/schemas/classIndexNReg'
    ClassIndex2:
      title: ClassIndex2
      required:
      - pReg
      type: object
      properties:
        pReg:
          $ref: '#/components/schemas/classIndexPReg'
    classIndexEF:
      title: classIndexEF
      required:
      - dTRN
      type: object
      properties:
        dTRN:
          pattern: ^[0-9]{13}$
          type: string
          description: Mandatory. The trader’s registration number including VAT number and suffix
        locationCode:
          pattern: ^[0-9]{3}$
          type: string
          description: Optional. Trader location code; it must be padded with leading zeros if less than 100, for example '081'
        category:
          pattern: ^[A-Za-z0-9 -]{1,12}$
          type: string
          description: Optional. A valid category defined on the backend
        enquiryReference:
          pattern: ^[A-Za-z0-9 -]{1,12}$
          type: string
          description: Optional. Used for storing the reference of a contact centre enquiry
        caseReference:
          pattern: ^[A-Za-z0-9 -]{1,14}$
          type: string
          description: Optional. Used for identifying the case the document is associated with
    classIndexNReg:
      title: classIndexNReg
      type: object
      properties:
        name:
          pattern: ^[A-Za-z0-9 '.&/-]{1,105}$
          type: string
          description: Optional.
        postCode:
          pattern: ^[A-Z]{1,2}[0-9][0-9A-Z]?\s?[0-9][A-Z]{2}$
          type: string
          description: Optional. Used for identifying the case the document is associated with
        callerReference:
          pattern: ^[A-Za-z0-9 -]{1,8}$
          type: string
          description: Optional.
        enquiryReference:
          pattern: ^[A-Za-z0-9 -]{1,12}$
          type: string
          description: Optional. Used for storing the reference of a contact centre enquiry
        caseReference:
          pattern: ^[A-Za-z0-9 -]{1,14}$
          type: string
          description: Optional. Used for identifying the case the document is associated with
    classIndexPReg:
      title: classIndexPReg
      type: object
      properties:
        caseReference:
          pattern: ^[A-Za-z0-9 -]{1,14}$
          type: string
          description: Optional. Used for identifying the case the document is associated with
        name:
          pattern: ^[A-Za-z0-9 '.&/-]{1,105}$
          type: string
          description: Optional.
        postCode:
          pattern: ^[A-Z]{1,2}[0-9][0-9A-Z]?\s?[0-9][A-Z]{2}$
          type: string
          description: Optional. Used for identifying the case the document is associated with
        outcomeStatus:
          pattern: ^[A-Za-z0-9 -]{1,20}$
          type: string
          description: Optional.
        riskScore:
          pattern: ^[0-9]{3}$
          type: string
          description: Optional.
        locationCode:
          pattern: ^[0-9]{3}$
          type: string
          description: Optional. Trader location code; it must be padded with leading zeros if less than 100, for example '081'
    DocBinaryType:
      title: DocBinaryType
      enum:
      - html
      - pdf
      - doc
      - xls
      - txt
      - htm
      - mht
      - tif
      - xml
      type: string
      description: Mandatory. A Windows filename extension for the document.
    documentMetadata:
      title: documentMetadata
      required:
      - classIndex
      - docType
      - docDate
      - docBinaryHash
      - docBinaryRef
      - docBinaryType
      - creatingUser
      type: object
      properties:
        classIndex:
          oneOf:
          - $ref: '#/components/schemas/ClassIndex'
          - $ref: '#/components/schemas/ClassIndex1'
          - $ref: '#/components/schemas/ClassIndex2'
          description: Mandatory. Only 1 of either 'ef', 'nReg', or 'pReg' must be supplied
        docType:
          pattern: ^[A-Za-z0-9]{2,4}$
          type: string
          description: Mandatory. A valid document type between 2 and 4 characters
        docDate:
          pattern: ^(((19|20)([2468][048]|[13579][26]|0[48])|2000)[-]02[-]29|((19|20)[0-9]{2}[-](0[469]|11)[-](0[1-9]|1[0-9]|2[0-9]|30)|(19|20)[0-9]{2}[-](0[13578]|1[02])[-](0[1-9]|[12][0-9]|3[01])|(19|20)[0-9]{2}[-]02[-](0[1-9]|1[0-9]|2[0-8])))$
          type: string
          description: Mandatory. Date format CCYY-MM-DD
        docDescription:
          pattern: ^[A-Za-z0-9 &'*+,./:;?{|}\(\)\-\[\]]{1,30}$
          type: string
          description: Optional. A brief description of the document.
        docPages:
          minimum: 1
          type: integer
          description: Optional. If the document is multi-page then the number of pages.
          format: int32
        docBinaryHash:
          pattern: ^[A-Za-z0-9+/]{22}={2}$
          type: string
          description: Mandatory. A 24 character base64 encoded MD5 hash checksum of the file used to ensure integrity. This MUST be a valid base64 string.
        docBinaryRef:
          pattern: ^[A-Za-z0-9¡-ÿ !#$%&'+,.;=@^_`{}~\(\)\-\[\]]{1,25}$
          type: string
          description: Mandatory. A Windows filename for the document. Can be a string representation of the 'documentId' URI path parameter.
        docBinaryType:
          allOf:
          - $ref: '#/components/schemas/DocBinaryType'
          - description: Mandatory. A Windows filename extension for the document.
        allocateToUser:
          pattern: ^(([A-Za-z0-9]{4,8})|(\*AUTO\*))$
          type: string
          description: User ID of the user or team to whom this document must be allocated for action. Use ‘*AUTO*’ to indicate that the document should be allocated based on automatic routing rules.
        creatingUser:
          pattern: ^[A-Za-z0-9 &'*+,./:;?{|}\(\)\-\[\]]{4,8}$
          type: string
          description: A valid ICLipse user id
    IFAPI1562StoreDocumentrequestschemav1.6.0:
      title: IFAPI1562StoreDocumentrequestschemav1.6.0
      required:
      - documentBinary
      - documentMetadata
      type: object
      properties:
        documentBinary:
          type: string
          description: 'The actual Base64 encoded document, maximum size ~10MB. This MUST be a valid base64 string. Validated by regex: ^[A-Za-z0-9+/]{2,14680064}={0,2}?$'
          format: binary
        documentMetadata:
          $ref: '#/components/schemas/documentMetadata'
tags:
- name: misc
  description: ''
