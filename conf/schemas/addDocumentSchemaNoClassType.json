{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "IF API#1562 Store Document request schema v1.6.0",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "documentBinary",
    "documentMetadata"
  ],
  "properties": {
    "documentBinary": {
      "description": "The actual Base64 encoded document, maximum size ~10MB. This MUST be a valid base64 string.",
      "type": "string",
      "format": "binary",
      "pattern": "^[A-Za-z0-9+/]+={0,2}$"
    },
    "documentMetadata": {
      "$ref": "#/definitions/documentMetadata"
    }
  },
  "definitions": {
    "documentMetadata": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "classIndex",
        "docType",
        "docDate",
        "docBinaryHash",
        "docBinaryRef",
        "docBinaryType",
        "creatingUser"
      ],
      "properties": {
        "classIndex": {
          "description": "Mandatory. Only 1 of either 'ef', 'nReg', or 'pReg' must be supplied",
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": true,
              "required": [
                "ef"
              ],
              "properties": {
                "ef": {
                  "$ref": "#/definitions/classIndexEF"
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": true,
              "required": [
                "nReg"
              ],
              "properties": {
                "nReg": {
                  "$ref": "#/definitions/classIndexNReg"
                }
              }
            },
            {
              "type": "object",
              "additionalProperties": true,
              "required": [
                "pReg"
              ],
              "properties": {
                "pReg": {
                  "$ref": "#/definitions/classIndexPReg"
                }
              }
            }
          ]
        },
        "docType": {
          "description": "Mandatory. A valid document type between 2 and 4 characters",
          "type": "string",
          "pattern": "^[A-Za-z0-9]{2,4}$"
        },
        "docDate": {
          "description": "Mandatory. Date format CCYY-MM-DD",
          "type": "string",
          "pattern": "^(((19|20)([2468][048]|[13579][26]|0[48])|2000)[-]02[-]29|((19|20)[0-9]{2}[-](0[469]|11)[-](0[1-9]|1[0-9]|2[0-9]|30)|(19|20)[0-9]{2}[-](0[13578]|1[02])[-](0[1-9]|[12][0-9]|3[01])|(19|20)[0-9]{2}[-]02[-](0[1-9]|1[0-9]|2[0-8])))$"
        },
        "docDescription": {
          "description": "Optional. A brief description of the document.",
          "type": "string",
          "pattern": "^[A-Za-z0-9 &'*+,./:;?{|}\\(\\)\\-\\[\\]]{1,30}$"
        },
        "docPages": {
          "description": "Optional. If the document is multi-page then the number of pages.",
          "type": "integer",
          "minimum": 1
        },
        "docBinaryHash": {
          "description": "Mandatory. A 24 character base64 encoded MD5 hash checksum of the file used to ensure integrity. This MUST be a valid base64 string.",
          "type": "string",
          "pattern": "^[A-Za-z0-9+/]{22}={2}$"
        },
        "docBinaryRef": {
          "description": "Mandatory. A Windows filename for the document. Can be a string representation of the 'documentId' URI path parameter.",
          "type": "string",
          "pattern": "^[A-Za-z0-9¡-ÿ !#$%&'+,.;=@^_`{}~\\(\\)\\-\\[\\]]{1,25}$"
        },
        "docBinaryType": {
          "description": "Mandatory. A Windows filename extension for the document.",
          "type": "string",
          "enum": [
            "html",
            "pdf",
            "doc",
            "xls",
            "txt",
            "htm",
            "mht",
            "tif",
            "xml"
          ]
        },
        "allocateToUser": {
          "description": "User ID of the user or team to whom this document must be allocated for action. Use ‘*AUTO*’ to indicate that the document should be allocated based on automatic routing rules.",
          "type": "string",
          "pattern": "^(([A-Za-z0-9]{4,8})|(\\*AUTO\\*))$"
        },
        "creatingUser": {
          "description": "A valid ICLipse user id",
          "type": "string",
          "pattern": "^[A-Za-z0-9 &'*+,./:;?{|}\\(\\)\\-\\[\\]]{4,8}$"
        }
      }
    },
    "classIndexEF": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
      }
    },
    "classIndexNReg": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
      }
    },
    "classIndexPReg": {
      "type": "object",
      "additionalProperties": true,
      "properties": {
      }
    },
    "locationCodeType": {
      "description": "Optional. Trader location code; it must be padded with leading zeros if less than 100, for example '081'",
      "type": "string",
      "pattern": "^[0-9]{3}$"
    },
    "enquiryReferenceType": {
      "description": "Optional. Used for storing the reference of a contact centre enquiry",
      "type": "string",
      "pattern": "^[A-Za-z0-9 -]{1,12}$"
    },
    "caseReferenceType": {
      "description": "Optional. Used for identifying the case the document is associated with",
      "type": "string",
      "pattern": "^[A-Za-z0-9 -]{1,14}$"
    },
    "postCodeType": {
      "description": "Optional. Used for identifying the case the document is associated with",
      "type": "string",
      "pattern": "^[A-Z]{1,2}[0-9][0-9A-Z]?\\s?[0-9][A-Z]{2}$"
    },
    "errorResponse": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "failures"
      ],
      "properties": {
        "failures": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "code",
              "reason"
            ],
            "properties": {
              "code": {
                "description": "Keys for all the errors returned",
                "type": "string",
                "pattern": "^[A-Z0-9_-]{1,160}$"
              },
              "reason": {
                "description": "A simple description for the failure",
                "type": "string",
                "minLength": 1,
                "maxLength": 160
              }
            }
          }
        }
      }
    }
  }
}
